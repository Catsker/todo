{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task__subtasks\"\n};\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.subtasks, subtask => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"task__subtask\",\n      key: subtask.id\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: $props.taskId + '_' + subtask.id\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"label\", {\n      for: $props.taskId + '_' + subtask.id\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"span\", null, _toDisplayString(subtask.text), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"button\", {\n      type: \"button\"\n    }, [_createElementVNode(\"svg\", {\n      width: \"26\",\n      height: \"26\",\n      viewBox: \"0 0 26 26\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\",\n      stroke: \"#FFDFBE\",\n      \"stroke-width\": \"1.5\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    })])], -1 /* HOISTED */))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"form\", {\n    class: \"add-subtask\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.addSubTask && _ctx.addSubTask(...args), [\"prevent\"]))\n  }, [_cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"+\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Add a new subtask\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newSubtaskText = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newSubtaskText]])], 32 /* NEED_HYDRATION */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_renderList","$props","subtasks","subtask","key","id","type","taskId","_hoisted_2","for","_hoisted_3","_toDisplayString","text","width","height","viewBox","fill","xmlns","d","stroke","onSubmit","_cache","_withModifiers","args","_ctx","addSubTask","placeholder","$event","newSubtaskText"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\components\\SubTasks.vue"],"sourcesContent":["<template>\r\n  <ul class=\"task__subtasks\">\r\n    <li class=\"task__subtask\" v-for=\"subtask in subtasks\" :key=\"subtask.id\">\r\n      <input type=\"checkbox\" :id=\"taskId + '_' + subtask.id\">\r\n      <label :for=\"taskId + '_' + subtask.id\" ></label>\r\n      <span>{{ subtask.text }}</span>\r\n      <button type=\"button\">\r\n        <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n              d=\"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\"\r\n              stroke=\"#FFDFBE\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  </ul>\r\n  \r\n  <form class=\"add-subtask\" @submit.prevent=\"addSubTask\">\r\n    <button type=\"submit\">+</button>\r\n    <input type=\"text\" placeholder=\"Add a new subtask\" v-model=\"newSubtaskText\">\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    subtasks: {  // Принимаем переданные данные\r\n      type: Array,\r\n      required: false,\r\n      default: () => []\r\n    },\r\n    taskId: {\r\n      type: Number\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EACMA,KAAK,EAAC;AAAgB;mBAD5B;mBAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAaK,MAbLC,UAaK,I,kBAZHH,mBAAA,CAWKC,SAAA,QAbTG,WAAA,CAEgDC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAxCP,mBAAA,CAWK;MAXDD,KAAK,EAAC,eAAe;MAA8BS,GAAG,EAAED,OAAO,CAACE;QAClEP,mBAAA,CAAuD;MAAhDQ,IAAI,EAAC,UAAU;MAAED,EAAE,EAAEJ,MAAA,CAAAM,MAAM,SAASJ,OAAO,CAACE;4BAHzDG,UAAA,GAIMV,mBAAA,CAAiD;MAAzCW,GAAG,EAAER,MAAA,CAAAM,MAAM,SAASJ,OAAO,CAACE;4BAJ1CK,UAAA,GAKMZ,mBAAA,CAA+B,cAAAa,gBAAA,CAAtBR,OAAO,CAACS,IAAI,kB,0BACrBd,mBAAA,CAMS;MANDQ,IAAI,EAAC;IAAQ,IACnBR,mBAAA,CAIM;MAJDe,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,IAAI;MAACC,OAAO,EAAC,WAAW;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;QAChEnB,mBAAA,CAEwF;MADpFoB,CAAC,EAAC,+LAA+L;MACjMC,MAAM,EAAC,SAAS;MAAC,cAAY,EAAC,KAAK;MAAC,gBAAc,EAAC,OAAO;MAAC,iBAAe,EAAC;;oCAMvFrB,mBAAA,CAGO;IAHDH,KAAK,EAAC,aAAa;IAAEyB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAhBnCC,cAAA,KAAAC,IAAA,KAgB6CC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;gCACnDzB,mBAAA,CAAgC;IAAxBQ,IAAI,EAAC;EAAQ,GAAC,GAAC,sB,gBACvBR,mBAAA,CAA4E;IAArEQ,IAAI,EAAC,MAAM;IAACoB,WAAW,EAAC,mBAAmB;IAlBtD,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAkBgEH,IAAA,CAAAI,cAAc,GAAAD,MAAA;iDAAdH,IAAA,CAAAI,cAAc,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}