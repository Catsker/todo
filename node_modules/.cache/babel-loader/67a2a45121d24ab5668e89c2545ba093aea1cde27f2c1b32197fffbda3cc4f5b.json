{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state() {\n    return {\n      tasks: [{\n        id: 1,\n        text: 'Закончить проект',\n        completed: false,\n        subtasks: [{\n          id: 1,\n          text: \"Создать компоненты\",\n          completed: true\n        }, {\n          id: 2,\n          text: \"Написать тесты\",\n          completed: false\n        }],\n        add_subtask: ''\n      }, {\n        id: 2,\n        text: 'Купить продукты',\n        completed: true,\n        subtasks: [{\n          id: 1,\n          text: \"Хлеб\",\n          completed: true\n        }, {\n          id: 2,\n          text: \"Молоко\",\n          completed: false\n        }, {\n          id: 3,\n          text: \"Яйца\",\n          completed: true\n        }],\n        add_subtask: ''\n      }],\n      add_task: '',\n      filter: 'all'\n    };\n  },\n  getters: {\n    // showTask: (state) => {},\n    // showSubtask: (state) => {}\n  },\n  mutations: {\n    ADD_TASK(state, taskText) {\n      const newTask = {\n        id: Date.now(),\n        // Генерация уникального ID\n        text: taskText.trim(),\n        completed: false,\n        subtasks: [] // Пустой массив подзадач\n      };\n\n      // Проверка на пустую строку\n      if (newTask.text) {\n        state.tasks.push(newTask);\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","tasks","id","text","completed","subtasks","add_subtask","add_task","filter","getters","mutations","ADD_TASK","taskText","newTask","Date","now","trim","push"],"sources":["C:/Users/Pavel/Documents/webstorm/todo/src/store.js"],"sourcesContent":["import {createStore} from 'vuex'\r\n\r\nexport default createStore({\r\n  state() {\r\n    return {\r\n      tasks: [\r\n        {\r\n          id: 1,\r\n          text: 'Закончить проект',\r\n          completed: false,\r\n          subtasks: [\r\n            {id: 1, text: \"Создать компоненты\", completed: true},\r\n            {id: 2, text: \"Написать тесты\", completed: false}\r\n          ],\r\n          add_subtask: ''\r\n        },\r\n        {\r\n          id: 2,\r\n          text: 'Купить продукты',\r\n          completed: true,\r\n          subtasks: [\r\n            {id: 1, text: \"Хлеб\", completed: true},\r\n            {id: 2, text: \"Молоко\", completed: false},\r\n            {id: 3, text: \"Яйца\", completed: true}\r\n          ],\r\n          add_subtask: ''\r\n        }\r\n      ],\r\n      add_task: '',\r\n      filter: 'all'\r\n    }\r\n  },\r\n  getters: {\r\n    // showTask: (state) => {},\r\n    // showSubtask: (state) => {}\r\n  },\r\n  mutations: {\r\n    ADD_TASK(state, taskText) {\r\n      const newTask = {\r\n        id: Date.now(), // Генерация уникального ID\r\n        text: taskText.trim(),\r\n        completed: false,\r\n        subtasks: [], // Пустой массив подзадач\r\n      }\r\n\r\n      // Проверка на пустую строку\r\n      if (newTask.text) {\r\n        state.tasks.push(newTask)\r\n      }\r\n    },\r\n  }\r\n})"],"mappings":";AAAA,SAAQA,WAAW,QAAO,MAAM;AAEhC,eAAeA,WAAW,CAAC;EACzBC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,KAAK,EAAE,CACL;QACEC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,kBAAkB;QACxBC,SAAS,EAAE,KAAK;QAChBC,QAAQ,EAAE,CACR;UAACH,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,oBAAoB;UAAEC,SAAS,EAAE;QAAI,CAAC,EACpD;UAACF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,gBAAgB;UAAEC,SAAS,EAAE;QAAK,CAAC,CAClD;QACDE,WAAW,EAAE;MACf,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,iBAAiB;QACvBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE,CACR;UAACH,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAI,CAAC,EACtC;UAACF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAK,CAAC,EACzC;UAACF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAI,CAAC,CACvC;QACDE,WAAW,EAAE;MACf,CAAC,CACF;MACDC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA;EAAA,CACD;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACX,KAAK,EAAEY,QAAQ,EAAE;MACxB,MAAMC,OAAO,GAAG;QACdX,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE;QAChBZ,IAAI,EAAES,QAAQ,CAACI,IAAI,CAAC,CAAC;QACrBZ,SAAS,EAAE,KAAK;QAChBC,QAAQ,EAAE,EAAE,CAAE;MAChB,CAAC;;MAED;MACA,IAAIQ,OAAO,CAACV,IAAI,EAAE;QAChBH,KAAK,CAACC,KAAK,CAACgB,IAAI,CAACJ,OAAO,CAAC;MAC3B;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}