{"ast":null,"code":"export default {\n  data() {\n    return {\n      newSubtaskText: ''\n    };\n  },\n  props: {\n    subtasks: {\n      // Принимаем переданные данные\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    taskId: {\n      type: Number,\n      required: true\n    }\n  },\n  methods: {\n    addSubtask() {\n      console.log(this.newSubtaskText);\n      this.$store.commit('ADD_SUBTASK', {\n        taskId: this.taskId,\n        subtaskText: this.newSubtaskText\n      });\n      this.newSubtaskText = '';\n    }\n  }\n};","map":{"version":3,"names":["data","newSubtaskText","props","subtasks","type","Array","required","default","taskId","Number","methods","addSubtask","console","log","$store","commit","subtaskText"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\components\\SubTasks.vue"],"sourcesContent":["<template>\r\n  <ul class=\"task__subtasks\">\r\n    <li class=\"task__subtask\" v-for=\"subtask in subtasks\" :key=\"subtask.id\">\r\n      <input type=\"checkbox\" :id=\"taskId + '_' + subtask.id\">\r\n      <label :for=\"taskId + '_' + subtask.id\" ></label>\r\n      <span>{{ subtask.text }}</span>\r\n      <button type=\"button\">\r\n        <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n              d=\"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\"\r\n              stroke=\"#FFDFBE\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  </ul>\r\n\r\n  <form class=\"add-subtask\" @submit.prevent=\"addSubtask\">\r\n    <button type=\"submit\">+</button>\r\n    <input type=\"text\" placeholder=\"Add a new subtask\" v-model=\"newSubtaskText\">\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newSubtaskText: ''\r\n    }\r\n  },\r\n  props: {\r\n    subtasks: {  // Принимаем переданные данные\r\n      type: Array,\r\n      required: false,\r\n      default: () => []\r\n    },\r\n    taskId: {\r\n      type: Number,\r\n      required: true,\r\n    }\r\n  },\r\n  methods: {\r\n    addSubtask() {\r\n      console.log(this.newSubtaskText)\r\n\r\n      this.$store.commit('ADD_SUBTASK', {\r\n        taskId: this.taskId,\r\n        subtaskText: this.newSubtaskText\r\n      });\r\n      this.newSubtaskText = ''\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAuBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE;MAAG;MACXC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,MAAM,EAAE;MACNJ,IAAI,EAAEK,MAAM;MACZH,QAAQ,EAAE;IACZ;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,cAAc;MAE/B,IAAI,CAACa,MAAM,CAACC,MAAM,CAAC,aAAa,EAAE;QAChCP,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBQ,WAAW,EAAE,IAAI,CAACf;MACpB,CAAC,CAAC;MACF,IAAI,CAACA,cAAa,GAAI,EAAC;IACzB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}