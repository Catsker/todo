{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, vModelRadio as _vModelRadio, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"body\"\n};\nconst _hoisted_2 = {\n  class: \"footer\"\n};\nconst _hoisted_3 = {\n  class: \"footer__left\"\n};\nconst _hoisted_4 = {\n  class: \"footer__display-tasks\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, \"to do list\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\"  TaskList  \"), _createElementVNode(\"form\", {\n    class: \"add-main-task\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.createTask && $options.createTask(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"add-main-task__input\",\n    placeholder: \"Add a new task\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.add_task = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.createTask && $options.createTask(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.add_task]]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"add-main-task__button\"\n  }, null, -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString($options.totalProgress), 1 /* TEXT */), _createElementVNode(\"nav\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"footer__display-tasks--hide\",\n    type: \"radio\",\n    name: \"1\",\n    id: \"all\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.filter = $event),\n    value: \"all\",\n    checked: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.filter]]), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    class: \"footer__display-tasks--visible\",\n    for: \"all\"\n  }, \"All\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    class: \"footer__display-tasks--hide\",\n    type: \"radio\",\n    name: \"1\",\n    id: \"active\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.filter = $event),\n    value: \"active\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.filter]]), _cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    class: \"footer__display-tasks--visible\",\n    for: \"active\"\n  }, \"Active\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    class: \"footer__display-tasks--hide\",\n    type: \"radio\",\n    name: \"1\",\n    id: \"completed\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.filter = $event),\n    value: \"completed\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.filter]]), _cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    class: \"footer__display-tasks--visible\",\n    for: \"completed\"\n  }, \"Completed\", -1 /* HOISTED */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","createTask","type","placeholder","$event","$data","add_task","onKeyup","_withKeys","_hoisted_2","_hoisted_3","_toDisplayString","totalProgress","_hoisted_4","name","id","filter","value","checked","for"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\App.vue"],"sourcesContent":["<template class=\"vue-cover\">\r\n  <div class=\"header\">to do list</div>\r\n  <div class=\"body\">\r\n    <!--  TaskList  -->\r\n\r\n    <form class=\"add-main-task\" @submit.prevent=\"createTask\">\r\n      <input type=\"text\" class=\"add-main-task__input\" placeholder=\"Add a new task\" v-model=\"add_task\"\r\n             @keyup.enter=\"createTask\">\r\n      <button type=\"submit\" class=\"add-main-task__button\"></button>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <span class=\"footer__left\">{{ totalProgress }}</span>\r\n    <nav class=\"footer__display-tasks\">\r\n      <input class=\"footer__display-tasks--hide\" type=\"radio\" name=\"1\" id=\"all\" v-model=\"filter\" value=\"all\" checked>\r\n      <label class=\"footer__display-tasks--visible\" for=\"all\">All</label>\r\n      <input class=\"footer__display-tasks--hide\" type=\"radio\" name=\"1\" id=\"active\" v-model=\"filter\" value=\"active\">\r\n      <label class=\"footer__display-tasks--visible\" for=\"active\">Active</label>\r\n      <input class=\"footer__display-tasks--hide\" type=\"radio\" name=\"1\" id=\"completed\" v-model=\"filter\"\r\n             value=\"completed\">\r\n      <label class=\"footer__display-tasks--visible\" for=\"completed\">Completed</label>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      filter: 'all',\r\n      tasks: JSON.parse(localStorage.getItem('tasks')) || [\r\n        {\r\n          id: 1,\r\n          text: 'Создайте первую задачу',\r\n          completed: false,\r\n          add_subtask: ''\r\n        }\r\n      ],\r\n      add_task: '',\r\n    }\r\n  },\r\n  watch: {\r\n    tasks: {\r\n      handler() {\r\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n      },\r\n      deep: true\r\n    },\r\n  },\r\n  methods: {\r\n    createTask() {\r\n      if (!this.add_task?.trim()) return;\r\n\r\n      const newId = this.tasks.length > 0\r\n          ? Math.max(...this.tasks.map(t => t.id)) + 1\r\n          : 1;\r\n\r\n      this.tasks.push({\r\n        id: newId,\r\n        text: this.add_task.trim(),\r\n        completed: false,\r\n        subtasks: [],\r\n        add_subtask: ''\r\n      });\r\n\r\n      this.add_task = '';\r\n    },\r\n\r\n    createSubtask(task) {\r\n      if (!task.add_subtask || !task.add_subtask.trim()) return;\r\n\r\n      const newId = task.subtasks?.length\r\n          ? Math.max(...task.subtasks.map(s => s.id)) + 1\r\n          : 1;\r\n\r\n      const newSubtask = {\r\n        id: newId,\r\n        text: task.add_subtask.trim(),\r\n        completed: false\r\n      };\r\n\r\n      if (!task.subtasks) {\r\n        task.subtasks = [];\r\n      }\r\n\r\n      task.subtasks.push(newSubtask);\r\n\r\n      task.add_subtask = '';\r\n    },\r\n\r\n    deleteTask(taskId) {\r\n      const index = this.tasks.findIndex(task => task.id === taskId);\r\n      this.tasks.splice(index, 1)\r\n    },\r\n\r\n    deleteSubtask(taskId, subtaskId) {\r\n      const parentTask = this.tasks.find(task => task.id === taskId);\r\n      const index = parentTask.subtasks.findIndex(subtask => subtask.id === subtaskId);\r\n      parentTask.subtasks.splice(index, 1);\r\n    },\r\n\r\n    checkTask(task) {\r\n      if (!task.subtasks || !Array.isArray(task.subtasks)) return\r\n      const isTaskDone = task.completed\r\n      task.subtasks.forEach(subtask => {\r\n        subtask.completed = isTaskDone\r\n      });\r\n    },\r\n\r\n    checkSubtask(task) {\r\n      if (!task.subtasks || task.subtasks.length === 0) return; // Добавляем проверку\r\n      task.completed = task.subtasks.every(subtask => subtask.completed);\r\n    },\r\n  },\r\n  computed: {\r\n    totalProgress() {\r\n      let total = this.tasks.length\r\n      let completed = this.tasks.filter(task => task.completed).length\r\n      return `${completed}/${total}`\r\n    },\r\n\r\n    filteredTasks() {\r\n      switch (this.filter) {\r\n        case 'active':\r\n          return this.tasks.filter(task => !task.completed)\r\n        case 'completed':\r\n          return this.tasks.filter(task => task.completed)\r\n        default:\r\n          return this.tasks\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n:root {\r\n  --header-and-footer: #ffca93;\r\n  --checkbox-main-close: #ffca93;\r\n  --header-maintask: #ffdfbe;\r\n  --checkbox-main: #feb567;\r\n  --subtask: #ffecd8;\r\n}\r\n\r\n#app {\r\n  max-width: 500px;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-inline: auto;\r\n  z-index: 10;\r\n  max-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header,\r\n.footer {\r\n  background-color: var(--header-and-footer);\r\n  padding-block: 11px;\r\n  padding-inline: 30px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.header {\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: center;\r\n  color: #7f4b13;\r\n}\r\n\r\n.body {\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  padding: 30px;\r\n  background-color: #FFF4E9;\r\n  overflow-y: auto;\r\n}\r\n\r\n.task {\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  border: 2px solid var(--header-maintask);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.task__main {\r\n  margin-inline: auto;\r\n  padding: 13px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 23px;\r\n  justify-content: space-between;\r\n  background-color: var(--header-maintask);\r\n  color: #7f4b13;\r\n}\r\n\r\n.task__main--span {\r\n  margin-right: auto;\r\n}\r\n\r\n.task__main--delete {\r\n  background-color: transparent;\r\n  width: 24px;\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n}\r\n\r\n\r\n\r\n.task__main--checkbox--hide {\r\n  display: none;\r\n}\r\n\r\n.task__main--checkbox--visible {\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  border: 2px var(--checkbox-main) solid;\r\n  border-radius: 5px;\r\n}\r\n\r\n.task__main--delete svg {\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.task__main--delete:hover svg path {\r\n  stroke: #fc8f1a;\r\n}\r\n\r\n.task__main--checkbox--hide:checked+.task__main--checkbox--visible {\r\n  background: url('assets/checked.svg') center/14px no-repeat;\r\n  background-color: var(--checkbox-main);\r\n\r\n}\r\n\r\n.task__main--checkbox--hide:checked~.task__main--span {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.footer__display-tasks {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.footer__display-tasks--visible {\r\n  padding: 3px 10px;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n}\r\n\r\n.footer__display-tasks--hide {\r\n  display: none;\r\n}\r\n\r\n.footer__display-tasks--hide:checked+.footer__display-tasks--visible {\r\n  border-color: rgba(127, 75, 19, 0.42);\r\n}\r\n\r\n.footer {\r\n  padding-block: 8px;\r\n  display: flex;\r\n  gap: 30px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: rgba(127, 75, 19, 0.42);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n}\r\n\r\n.add-main-task {\r\n  width: 100%;\r\n  /* border: 1px red solid; */\r\n  overflow: hidden;\r\n  position: relative;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.add-main-task__input {\r\n  /* display: block; */\r\n  padding: 11px;\r\n  background-color: #ffecd8;\r\n  border-radius: 10px;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: left;\r\n  border: 1.50px dashed #ffca93;\r\n  color: #7f4b13;\r\n  padding-inline: 20px 55px;\r\n  /* box-sizing: content-box; */\r\n  /* max-width: 100%; */\r\n  width: 100%;\r\n}\r\n\r\n.add-main-task__input::placeholder {\r\n  color: #ffca93;\r\n  text-align: center;\r\n}\r\n\r\n.add-main-task__button {\r\n  position: absolute;\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  /* box-sizing: content-box; */\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  right: 20px;\r\n  background-color: transparent;\r\n  border: 2px var(--checkbox-main) solid;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-main-task__input:not(:placeholder-shown)+.add-main-task__button {\r\n  display: flex;\r\n}\r\n\r\n\r\n\r\n.add-main-task__button::after {\r\n  content: '+';\r\n  color: var(--checkbox-main);\r\n  font-size: 20px;\r\n}\r\n\r\n.add-subtask {\r\n  background-color: #FFECD7;\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 23px;\r\n  padding-inline: 20px;\r\n  padding-right: 60px;\r\n}\r\n\r\n.add-subtask button {\r\n  background-color: transparent;\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  color: var(--checkbox-main);\r\n  border: 2px solid var(--checkbox-main);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-subtask input {\r\n  padding-block: 11px;\r\n  background-color: transparent;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: left;\r\n  color: #7f4b13;\r\n  width: 100%;\r\n}\r\n\r\n.add-subtask input::placeholder {\r\n  color: #ffca93;\r\n}\r\n\r\n.task__subtask {\r\n  background-color: #FFECD7;\r\n  color: #7f4b13;\r\n  padding-block: 11px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-inline: 20px;\r\n  gap: 23px;\r\n  border-bottom: 1px solid var(--header-maintask);\r\n}\r\n\r\n.task__subtask input {\r\n  display: none;\r\n}\r\n\r\n.task__subtask span {\r\n  margin-right: auto;\r\n}\r\n\r\n.task__subtask label {\r\n  /* background-color: transparent; */\r\n  border: 2px solid var(--checkbox-main-close);\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.task__subtask input:checked+label {\r\n  background: url('assets/checked.svg') center/14px no-repeat;\r\n  background-color: var(--checkbox-main-close);\r\n}\r\n\r\n.task__subtask input:checked~span {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.task__subtask button {\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  background-color: transparent;\r\n}\r\n\r\n.task__subtask button:hover {\r\n  svg {\r\n    path {\r\n      stroke: #fc8f1a;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";;;;EAEOA,KAAK,EAAC;AAAM;;EAUZA,KAAK,EAAC;AAAQ;;EACXA,KAAK,EAAC;AAAc;;EACrBA,KAAK,EAAC;AAAuB;;uBAdtCC,mBAAA,CAAAC,SAAA,S,4BACEC,mBAAA,CAAoC;IAA/BH,KAAK,EAAC;EAAQ,GAAC,YAAU,sBAC9BG,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,gBAAmB,EAEnBF,mBAAA,CAIO;IAJDH,KAAK,EAAC,eAAe;IAAEM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALvCC,cAAA,KAAAC,IAAA,KAKiDC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBACrDN,mBAAA,CACiC;IAD1BS,IAAI,EAAC,MAAM;IAACZ,KAAK,EAAC,sBAAsB;IAACa,WAAW,EAAC,gBAAgB;IANlF,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAM4FC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACtFG,OAAK,EAAAV,MAAA,QAAAA,MAAA,MAPnBW,SAAA,KAAAT,IAAA,KAO2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;iEADuDM,KAAA,CAAAC,QAAQ,E,6BAE9Fb,mBAAA,CAA6D;IAArDS,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;4DAIhCG,mBAAA,CAWM,OAXNgB,UAWM,GAVJhB,mBAAA,CAAqD,QAArDiB,UAAqD,EAAAC,gBAAA,CAAvBX,QAAA,CAAAY,aAAa,kBAC3CnB,mBAAA,CAQM,OARNoB,UAQM,G,gBAPJpB,mBAAA,CAA+G;IAAxGH,KAAK,EAAC,6BAA6B;IAACY,IAAI,EAAC,OAAO;IAACY,IAAI,EAAC,GAAG;IAACC,EAAE,EAAC,KAAK;IAf/E,uBAAAlB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAeyFC,KAAA,CAAAW,MAAM,GAAAZ,MAAA;IAAEa,KAAK,EAAC,KAAK;IAACC,OAAO,EAAP;kDAApBb,KAAA,CAAAW,MAAM,E,6BACzFvB,mBAAA,CAAmE;IAA5DH,KAAK,EAAC,gCAAgC;IAAC6B,GAAG,EAAC;KAAM,KAAG,sB,gBAC3D1B,mBAAA,CAA6G;IAAtGH,KAAK,EAAC,6BAA6B;IAACY,IAAI,EAAC,OAAO;IAACY,IAAI,EAAC,GAAG;IAACC,EAAE,EAAC,QAAQ;IAjBlF,uBAAAlB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAiB4FC,KAAA,CAAAW,MAAM,GAAAZ,MAAA;IAAEa,KAAK,EAAC;kDAAdZ,KAAA,CAAAW,MAAM,E,6BAC5FvB,mBAAA,CAAyE;IAAlEH,KAAK,EAAC,gCAAgC;IAAC6B,GAAG,EAAC;KAAS,QAAM,sB,gBACjE1B,mBAAA,CACyB;IADlBH,KAAK,EAAC,6BAA6B;IAACY,IAAI,EAAC,OAAO;IAACY,IAAI,EAAC,GAAG;IAACC,EAAE,EAAC,WAAW;IAnBrF,uBAAAlB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAmB+FC,KAAA,CAAAW,MAAM,GAAAZ,MAAA;IACxFa,KAAK,EAAC;kDAD4EZ,KAAA,CAAAW,MAAM,E,6BAE/FvB,mBAAA,CAA+E;IAAxEH,KAAK,EAAC,gCAAgC;IAAC6B,GAAG,EAAC;KAAY,WAAS,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}