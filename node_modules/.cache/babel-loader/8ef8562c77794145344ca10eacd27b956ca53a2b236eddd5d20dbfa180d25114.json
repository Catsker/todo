{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      filter: 'all',\n      tasks: JSON.parse(localStorage.getItem('tasks')) || [],\n      add_task: ''\n    };\n  },\n  watch: {\n    tasks: {\n      handler() {\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n      },\n      deep: true\n    }\n  },\n  methods: {\n    createTask() {\n      if (!this.add_task?.trim()) return;\n      const newId = this.tasks.length > 0 ? Math.max(...this.tasks.map(t => t.id)) + 1 : 1;\n      this.tasks.push({\n        id: newId,\n        text: this.add_task.trim(),\n        completed: false,\n        subtasks: [],\n        add_subtask: ''\n      });\n      this.add_task = '';\n    },\n    createSubtask(task) {\n      if (!task.add_subtask || !task.add_subtask.trim()) return;\n      const newId = task.subtasks?.length ? Math.max(...task.subtasks.map(s => s.id)) + 1 : 1;\n      const newSubtask = {\n        id: newId,\n        text: task.add_subtask.trim(),\n        completed: false\n      };\n      if (!task.subtasks) {\n        task.subtasks = [];\n      }\n      task.subtasks.push(newSubtask);\n      task.add_subtask = '';\n    },\n    deleteTask(taskId) {\n      const index = this.tasks.findIndex(task => task.id === taskId);\n      this.tasks.splice(index, 1);\n    },\n    deleteSubtask(taskId, subtaskId) {\n      const parentTask = this.tasks.find(task => task.id === taskId);\n      const index = parentTask.subtasks.findIndex(subtask => subtask.id === subtaskId);\n      parentTask.subtasks.splice(index, 1);\n    },\n    checkTask(task) {\n      if (!task.subtasks || !Array.isArray(task.subtasks)) return;\n      const isTaskDone = task.completed;\n      task.subtasks.forEach(subtask => {\n        subtask.completed = isTaskDone;\n      });\n    },\n    checkSubtask(task) {\n      if (!task.subtasks || task.subtasks.length === 0) return; // Добавляем проверку\n      task.completed = task.subtasks.every(subtask => subtask.completed);\n    }\n  },\n  computed: {\n    totalProgress() {\n      let total = this.tasks.length;\n      let completed = this.tasks.filter(task => task.completed).length;\n      return `${completed}/${total}`;\n    },\n    filteredTasks() {\n      switch (this.filter) {\n        case 'active':\n          return this.tasks.filter(task => !task.completed);\n        case 'completed':\n          return this.tasks.filter(task => task.completed);\n        default:\n          return this.tasks;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","filter","tasks","JSON","parse","localStorage","getItem","add_task","watch","handler","setItem","stringify","deep","methods","createTask","trim","newId","length","Math","max","map","t","id","push","text","completed","subtasks","add_subtask","createSubtask","task","s","newSubtask","deleteTask","taskId","index","findIndex","splice","deleteSubtask","subtaskId","parentTask","find","subtask","checkTask","Array","isArray","isTaskDone","forEach","checkSubtask","every","computed","totalProgress","total","filteredTasks"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\App.vue"],"sourcesContent":["<template class=\"vue-cover\">\r\n  <div class=\"header\">to do list</div>\r\n  <div class=\"body\">\r\n    <div v-if=\"tasks.length === 0\">Создайте первую заметку</div>\r\n\r\n    <div class=\"task\" v-for=\"task in filteredTasks\" :key=\"task.id\">\r\n      <div class=\"task__main\">\r\n        <input type=\"checkbox\" class=\"task__main--checkbox--hide\" :id=\"'task-checkbox-' + task.id\"\r\n               v-model=\"task.completed\" @change=\"checkTask(task)\">\r\n        <label :for=\"'task-checkbox-' + task.id\" class=\"task__main--checkbox--visible\">\r\n\r\n        </label>\r\n        <span class=\"task__main--span\">{{ task.text }}</span>\r\n        <button type=\"button\" class=\"task__main--delete\" @click=\"deleteTask(task.id)\">\r\n          <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n                d=\"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\"\r\n                stroke=\"#FFCA93\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <ul class=\"task__subtasks\">\r\n        <li class=\"task__subtask\" v-for=\"subtask in task.subtasks\" :key=\"subtask.id\">\r\n          <input type=\"checkbox\" :id=\"'task-checkbox-' + task.id + '_' + subtask.id\" v-model=\"subtask.completed\"\r\n                 @change=\"checkSubtask(task)\">\r\n          <label :for=\"'task-checkbox-' + task.id + '_' + subtask.id\"></label>\r\n          <span>{{ subtask.text }}</span>\r\n          <button type=\"button\" @click=\"deleteSubtask(task.id, subtask.id); checkSubtask(task)\">\r\n            <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                  d=\"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\"\r\n                  stroke=\"#FFDFBE\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n            </svg>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n      <form class=\"add-subtask\" @submit.prevent=\"createSubtask(task); checkSubtask(task)\">\r\n        <button type=\"submit\">+</button>\r\n        <input type=\"text\" placeholder=\"Add a new subtask\" v-model=\"task.add_subtask\"\r\n               @keyup.enter=\"createSubtask(task)\">\r\n      </form>\r\n    </div>\r\n\r\n    <form class=\"add-main-task\" @submit.prevent=\"createTask\">\r\n      <input type=\"text\" class=\"add-main-task__input\" placeholder=\"Add a new task\" v-model=\"add_task\"\r\n             @keyup.enter=\"createTask\">\r\n      <button type=\"submit\" class=\"add-main-task__button\"></button>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <span class=\"footer__left\">{{ totalProgress }}</span>\r\n    <nav class=\"footer__display-tasks\">\r\n      <input class=\"footer__display-tasks--hide\" type=\"radio\" name=\"1\" id=\"all\" v-model=\"filter\" value=\"all\" checked>\r\n      <label class=\"footer__display-tasks--visible\" for=\"all\">All</label>\r\n      <input class=\"footer__display-tasks--hide\" type=\"radio\" name=\"1\" id=\"active\" v-model=\"filter\" value=\"active\">\r\n      <label class=\"footer__display-tasks--visible\" for=\"active\">Active</label>\r\n      <input class=\"footer__display-tasks--hide\" type=\"radio\" name=\"1\" id=\"completed\" v-model=\"filter\"\r\n             value=\"completed\">\r\n      <label class=\"footer__display-tasks--visible\" for=\"completed\">Completed</label>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      filter: 'all',\r\n      tasks: JSON.parse(localStorage.getItem('tasks')) || [],\r\n      add_task: '',\r\n    }\r\n  },\r\n  watch: {\r\n    tasks: {\r\n      handler() {\r\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n      },\r\n      deep: true\r\n    },\r\n  },\r\n  methods: {\r\n    createTask() {\r\n      if (!this.add_task?.trim()) return;\r\n\r\n      const newId = this.tasks.length > 0\r\n          ? Math.max(...this.tasks.map(t => t.id)) + 1\r\n          : 1;\r\n\r\n      this.tasks.push({\r\n        id: newId,\r\n        text: this.add_task.trim(),\r\n        completed: false,\r\n        subtasks: [],\r\n        add_subtask: ''\r\n      });\r\n\r\n      this.add_task = '';\r\n    },\r\n\r\n    createSubtask(task) {\r\n      if (!task.add_subtask || !task.add_subtask.trim()) return;\r\n\r\n      const newId = task.subtasks?.length\r\n          ? Math.max(...task.subtasks.map(s => s.id)) + 1\r\n          : 1;\r\n\r\n      const newSubtask = {\r\n        id: newId,\r\n        text: task.add_subtask.trim(),\r\n        completed: false\r\n      };\r\n\r\n      if (!task.subtasks) {\r\n        task.subtasks = [];\r\n      }\r\n\r\n      task.subtasks.push(newSubtask);\r\n\r\n      task.add_subtask = '';\r\n    },\r\n\r\n    deleteTask(taskId) {\r\n      const index = this.tasks.findIndex(task => task.id === taskId);\r\n      this.tasks.splice(index, 1)\r\n    },\r\n\r\n    deleteSubtask(taskId, subtaskId) {\r\n      const parentTask = this.tasks.find(task => task.id === taskId);\r\n      const index = parentTask.subtasks.findIndex(subtask => subtask.id === subtaskId);\r\n      parentTask.subtasks.splice(index, 1);\r\n    },\r\n\r\n    checkTask(task) {\r\n      if (!task.subtasks || !Array.isArray(task.subtasks)) return\r\n      const isTaskDone = task.completed\r\n      task.subtasks.forEach(subtask => {\r\n        subtask.completed = isTaskDone\r\n      });\r\n    },\r\n\r\n    checkSubtask(task) {\r\n      if (!task.subtasks || task.subtasks.length === 0) return; // Добавляем проверку\r\n      task.completed = task.subtasks.every(subtask => subtask.completed);\r\n    },\r\n  },\r\n  computed: {\r\n    totalProgress() {\r\n      let total = this.tasks.length\r\n      let completed = this.tasks.filter(task => task.completed).length\r\n      return `${completed}/${total}`\r\n    },\r\n\r\n    filteredTasks() {\r\n      switch (this.filter) {\r\n        case 'active':\r\n          return this.tasks.filter(task => !task.completed)\r\n        case 'completed':\r\n          return this.tasks.filter(task => task.completed)\r\n        default:\r\n          return this.tasks\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n:root {\r\n  --header-and-footer: #ffca93;\r\n  --checkbox-main-close: #ffca93;\r\n  --header-maintask: #ffdfbe;\r\n  --checkbox-main: #feb567;\r\n  --subtask: #ffecd8;\r\n}\r\n\r\n#app {\r\n  max-width: 500px;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-inline: auto;\r\n  z-index: 10;\r\n  max-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.header,\r\n.footer {\r\n  background-color: var(--header-and-footer);\r\n  padding-block: 11px;\r\n  padding-inline: 30px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.header {\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: center;\r\n  color: #7f4b13;\r\n}\r\n\r\n.body {\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  padding: 30px;\r\n  background-color: #FFF4E9;\r\n  overflow-y: auto;\r\n}\r\n\r\n.task {\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  border: 2px solid var(--header-maintask);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.task__main {\r\n  margin-inline: auto;\r\n  padding: 13px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 23px;\r\n  justify-content: space-between;\r\n  background-color: var(--header-maintask);\r\n  color: #7f4b13;\r\n}\r\n\r\n.task__main--span {\r\n  margin-right: auto;\r\n}\r\n\r\n.task__main--delete {\r\n  background-color: transparent;\r\n  width: 24px;\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n}\r\n\r\n.task__main--delete svg {\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.task__main--delete:hover svg path {\r\n  stroke: #fc8f1a;\r\n}\r\n\r\n.task__main--checkbox--hide {\r\n  display: none;\r\n}\r\n\r\n.task__main--checkbox--visible {\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  border: 2px var(--checkbox-main) solid;\r\n  border-radius: 5px;\r\n}\r\n\r\n\r\n.task__main--checkbox--hide:checked+.task__main--checkbox--visible {\r\n  background: url('assets/checked.svg') center/14px no-repeat;\r\n  background-color: var(--checkbox-main);\r\n\r\n}\r\n\r\n.task__main--checkbox--hide:checked~.task__main--span {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.footer__display-tasks {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.footer__display-tasks--visible {\r\n  padding: 3px 10px;\r\n  border: 1px solid transparent;\r\n  border-radius: 10px;\r\n}\r\n\r\n.footer__display-tasks--hide {\r\n  display: none;\r\n}\r\n\r\n.footer__display-tasks--hide:checked+.footer__display-tasks--visible {\r\n  border-color: rgba(127, 75, 19, 0.42);\r\n}\r\n\r\n.footer {\r\n  padding-block: 8px;\r\n  display: flex;\r\n  gap: 30px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: rgba(127, 75, 19, 0.42);\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n}\r\n\r\n.add-main-task {\r\n  width: 100%;\r\n  /* border: 1px red solid; */\r\n  overflow: hidden;\r\n  position: relative;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.add-main-task__input {\r\n  /* display: block; */\r\n  padding: 11px;\r\n  background-color: #ffecd8;\r\n  border-radius: 10px;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: left;\r\n  border: 1.50px dashed #ffca93;\r\n  color: #7f4b13;\r\n  padding-inline: 20px 55px;\r\n  /* box-sizing: content-box; */\r\n  /* max-width: 100%; */\r\n  width: 100%;\r\n}\r\n\r\n.add-main-task__input::placeholder {\r\n  color: #ffca93;\r\n  text-align: center;\r\n}\r\n\r\n.add-main-task__button {\r\n  position: absolute;\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  /* box-sizing: content-box; */\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  right: 20px;\r\n  background-color: transparent;\r\n  border: 2px var(--checkbox-main) solid;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-main-task__input:not(:placeholder-shown)+.add-main-task__button {\r\n  display: flex;\r\n}\r\n\r\n\r\n\r\n.add-main-task__button::after {\r\n  content: '+';\r\n  color: var(--checkbox-main);\r\n  font-size: 20px;\r\n}\r\n\r\n.add-subtask {\r\n  background-color: #FFECD7;\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 23px;\r\n  padding-inline: 20px;\r\n  padding-right: 60px;\r\n}\r\n\r\n.add-subtask button {\r\n  background-color: transparent;\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  color: var(--checkbox-main);\r\n  border: 2px solid var(--checkbox-main);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n}\r\n\r\n.add-subtask input {\r\n  padding-block: 11px;\r\n  background-color: transparent;\r\n  font-family: \"Inter\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 140%;\r\n  text-align: left;\r\n  color: #7f4b13;\r\n  width: 100%;\r\n}\r\n\r\n.add-subtask input::placeholder {\r\n  color: #ffca93;\r\n}\r\n\r\n.task__subtask {\r\n  background-color: #FFECD7;\r\n  color: #7f4b13;\r\n  padding-block: 11px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-inline: 20px;\r\n  gap: 23px;\r\n  border-bottom: 1px solid var(--header-maintask);\r\n}\r\n\r\n.task__subtask input {\r\n  display: none;\r\n}\r\n\r\n.task__subtask span {\r\n  margin-right: auto;\r\n}\r\n\r\n.task__subtask label {\r\n  /* background-color: transparent; */\r\n  border: 2px solid var(--checkbox-main-close);\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.task__subtask input:checked+label {\r\n  background: url('assets/checked.svg') center/14px no-repeat;\r\n  background-color: var(--checkbox-main-close);\r\n}\r\n\r\n.task__subtask input:checked~span {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.task__subtask button {\r\n  height: 24px;\r\n  aspect-ratio: 1;\r\n  background-color: transparent;\r\n}\r\n\r\n.task__subtask button:hover {\r\n  svg {\r\n    path {\r\n      stroke: #fc8f1a;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}