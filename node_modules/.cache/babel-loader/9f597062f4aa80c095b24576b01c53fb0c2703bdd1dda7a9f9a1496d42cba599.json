{"ast":null,"code":"import SubtaskList from './SubtaskList.vue';\nexport default {\n  name: 'TaskItem',\n  components: {\n    // Добавляем регистрацию компонента\n    SubtaskList\n  },\n  props: {\n    task: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['update', 'delete-task', 'add-subtask', 'delete-subtask'],\n  methods: {\n    handleTaskChange(event) {\n      this.$emit('update', {\n        ...this.task,\n        completed: event.target.checked\n      });\n    },\n    emitDeleteTask() {\n      this.$emit('delete-task', this.task.id);\n    }\n  }\n};","map":{"version":3,"names":["SubtaskList","name","components","props","task","type","Object","required","emits","methods","handleTaskChange","event","$emit","completed","target","checked","emitDeleteTask","id"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\components\\TaskItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"task\">\r\n    <div class=\"task__main\">\r\n      <input\r\n          type=\"checkbox\"\r\n          :checked=\"task.completed\"\r\n          @change=\"$emit('update', { ...task, completed: $event.target.checked })\"\r\n      >\r\n      <label :for=\"'task-checkbox-' + task.id\" class=\"task__main--checkbox--visible\"></label>\r\n      <span class=\"task__main--span\">{{ task.text }}</span>\r\n      <button class=\"task__main--delete\" @click=\"$emit('delete-task', task.id)\">\r\n        <!-- SVG иконка -->\r\n      </button>\r\n    </div>\r\n    <SubtaskList\r\n        :subtasks=\"task.subtasks\"\r\n        :task-id=\"task.id\"\r\n        @add-subtask=\"$emit('add-subtask', { taskId: task.id, text: $event })\"\r\n        @delete-subtask=\"$emit('delete-subtask', { taskId: task.id, subtaskId: $event })\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SubtaskList from './SubtaskList.vue'\r\n\r\nexport default {\r\n  name: 'TaskItem',\r\n  components: {  // Добавляем регистрацию компонента\r\n    SubtaskList\r\n  },\r\n  props: {\r\n    task: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['update', 'delete-task', 'add-subtask', 'delete-subtask'],\r\n  methods: {\r\n    handleTaskChange(event) {\r\n      this.$emit('update', {\r\n        ...this.task,\r\n        completed: event.target.checked\r\n      })\r\n    },\r\n    emitDeleteTask() {\r\n      this.$emit('delete-task', this.task.id)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.task {\r\n  border: 2px solid #FFDFBE;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n}\r\n.task__main {\r\n  background-color: #FFDFBE;\r\n  padding: 13px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 23px;\r\n}\r\n.task__main--span {\r\n  margin-right: auto;\r\n  color: #7f4b13;\r\n}\r\n/* Остальные стили из оригинала */\r\n</style>"],"mappings":"AAwBA,OAAOA,WAAU,MAAO,mBAAkB;AAE1C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IAAG;IACbF;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,aAAa,EAAE,gBAAgB,CAAC;EACjEC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE;QACnB,GAAG,IAAI,CAACR,IAAI;QACZS,SAAS,EAAEF,KAAK,CAACG,MAAM,CAACC;MAC1B,CAAC;IACH,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACJ,KAAK,CAAC,aAAa,EAAE,IAAI,CAACR,IAAI,CAACa,EAAE;IACxC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}