{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state() {\n    return {\n      tasks: [{\n        id: 1,\n        text: 'Закончить проект',\n        completed: false,\n        subtasks: [{\n          id: 1,\n          text: \"Создать компоненты\",\n          completed: true\n        }, {\n          id: 2,\n          text: \"Написать тесты\",\n          completed: false\n        }],\n        add_subtask: ''\n      }, {\n        id: 2,\n        text: 'Купить продукты',\n        completed: true,\n        subtasks: [{\n          id: 1,\n          text: \"Хлеб\",\n          completed: true\n        }, {\n          id: 2,\n          text: \"Молоко\",\n          completed: false\n        }, {\n          id: 3,\n          text: \"Яйца\",\n          completed: true\n        }],\n        add_subtask: ''\n      }],\n      add_task: '',\n      filter: 'all'\n    };\n  },\n  getters: {\n    showTask: state => {}\n    // showSubtask: (state) => {}\n  },\n  mutations: {\n    ADD_TASK(state, taskText) {\n      const newTask = {\n        id: Date.now(),\n        text: taskText.trim(),\n        completed: false,\n        subtasks: []\n      };\n\n      // Проверка на пустую строку\n      if (newTask.text) {\n        state.tasks.push(newTask);\n      }\n    },\n    ADD_SUBTASK(state, {\n      taskId,\n      subtaskText\n    }) {\n      const newSubtask = {\n        id: Date.now(),\n        text: subtaskText.trim(),\n        completed: false\n      };\n      let currentTask = state.tasks.find(task => task.id === taskId);\n      if (newSubtask.text) {\n        currentTask.subtasks.push(newSubtask);\n      }\n    },\n    DELETE_TASK(state, taskId) {\n      state.tasks.splice(state.tasks.indexOf(taskId), 1);\n    },\n    DELETE_SUBTASK(state, {\n      taskId,\n      subtaskId\n    }) {\n      const taskIndex = state.tasks.findIndex(task => task.id === taskId);\n      const subs = state.tasks[taskIndex].subtasks;\n      const subIndex = subs.findIndex(s => s.id === subtaskId);\n      subs.splice(subIndex, 1);\n    },\n    UPDATE_TASK_CHECKED(state, taskId) {\n      const task = state.tasks.find(t => t.id === taskId);\n      task.checked = !task.checked;\n    },\n    UPDATE_SUBTASK_CHECKED(state, {\n      taskId,\n      subtaskId\n    }) {\n      const task = state.tasks.find(task => task.id === taskId);\n      const subtask = task.subtasks.find(t => t.id === subtaskId);\n      subtask.checked = !subtask.checked;\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","tasks","id","text","completed","subtasks","add_subtask","add_task","filter","getters","showTask","mutations","ADD_TASK","taskText","newTask","Date","now","trim","push","ADD_SUBTASK","taskId","subtaskText","newSubtask","currentTask","find","task","DELETE_TASK","splice","indexOf","DELETE_SUBTASK","subtaskId","taskIndex","findIndex","subs","subIndex","s","UPDATE_TASK_CHECKED","t","checked","UPDATE_SUBTASK_CHECKED","subtask"],"sources":["C:/Users/Pavel/Documents/webstorm/todo/src/store.js"],"sourcesContent":["import {createStore} from 'vuex'\r\n\r\nexport default createStore({\r\n  state() {\r\n    return {\r\n      tasks: [\r\n        {\r\n          id: 1,\r\n          text: 'Закончить проект',\r\n          completed: false,\r\n          subtasks: [\r\n            {id: 1, text: \"Создать компоненты\", completed: true},\r\n            {id: 2, text: \"Написать тесты\", completed: false}\r\n          ],\r\n          add_subtask: ''\r\n        },\r\n        {\r\n          id: 2,\r\n          text: 'Купить продукты',\r\n          completed: true,\r\n          subtasks: [\r\n            {id: 1, text: \"Хлеб\", completed: true},\r\n            {id: 2, text: \"Молоко\", completed: false},\r\n            {id: 3, text: \"Яйца\", completed: true}\r\n          ],\r\n          add_subtask: ''\r\n        }\r\n      ],\r\n      add_task: '',\r\n      filter: 'all'\r\n    }\r\n  },\r\n  getters: {\r\n    showTask: (state) => {\r\n      \r\n    },\r\n    // showSubtask: (state) => {}\r\n  },\r\n  mutations: {\r\n    ADD_TASK(state, taskText) {\r\n      const newTask = {\r\n        id: Date.now(),\r\n        text: taskText.trim(),\r\n        completed: false,\r\n        subtasks: []\r\n      }\r\n\r\n      // Проверка на пустую строку\r\n      if (newTask.text) {\r\n        state.tasks.push(newTask)\r\n      }\r\n    },\r\n    ADD_SUBTASK(state, {taskId, subtaskText}) {\r\n      const newSubtask = {\r\n        id: Date.now(),\r\n        text: subtaskText.trim(),\r\n        completed: false,\r\n      }\r\n\r\n      let currentTask = state.tasks.find(task => task.id === taskId)\r\n      if (newSubtask.text) {\r\n        currentTask.subtasks.push(newSubtask)\r\n      }\r\n    },\r\n    DELETE_TASK(state, taskId) {\r\n      state.tasks.splice(state.tasks.indexOf(taskId), 1)\r\n    },\r\n    DELETE_SUBTASK(state, {taskId, subtaskId}) {\r\n      const taskIndex = state.tasks.findIndex(task => task.id === taskId);\r\n      const subs = state.tasks[taskIndex].subtasks;\r\n      const subIndex = subs.findIndex(s => s.id === subtaskId);\r\n      subs.splice(subIndex, 1);\r\n    },\r\n    UPDATE_TASK_CHECKED(state, taskId) {\r\n      const task = state.tasks.find(t => t.id === taskId);\r\n      task.checked = !task.checked;\r\n    },\r\n    UPDATE_SUBTASK_CHECKED(state, {taskId, subtaskId}) {\r\n      const task = state.tasks.find(task => task.id === taskId);\r\n      const subtask = task.subtasks.find(t => t.id === subtaskId)\r\n      subtask.checked = !subtask.checked;\r\n    }\r\n  }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}