{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task__subtasks\"\n};\nconst _hoisted_2 = [\"id\", \"checked\", \"onChange\"];\nconst _hoisted_3 = [\"for\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.subtasks, subtask => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"task__subtask\",\n      key: subtask.id\n    }, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: $props.taskId + '_' + subtask.id,\n      checked: $options.isSubtaskChecked(subtask.id),\n      onChange: $event => $options.updateSubtaskStatus(subtask.id, $event.target.checked)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), _createElementVNode(\"label\", {\n      for: $props.taskId + '_' + subtask.id\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"span\", null, _toDisplayString(subtask.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n      type: \"button\",\n      onClick: $event => $options.deleteSubtask(subtask.id)\n    }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"svg\", {\n      width: \"26\",\n      height: \"26\",\n      viewBox: \"0 0 26 26\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, [_createElementVNode(\"path\", {\n      d: \"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\",\n      stroke: \"#FFDFBE\",\n      \"stroke-width\": \"1.5\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\"\n    })], -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","subtasks","subtask","key","id","_createElementVNode","type","taskId","checked","$options","isSubtaskChecked","onChange","$event","updateSubtaskStatus","target","_hoisted_2","for","_hoisted_3","_toDisplayString","text","onClick","deleteSubtask","width","height","viewBox","fill","xmlns","d","stroke","_hoisted_4"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\components\\SubTasks.vue"],"sourcesContent":["<template>\r\n  <ul class=\"task__subtasks\">\r\n    <li class=\"task__subtask\" v-for=\"subtask in subtasks\" :key=\"subtask.id\">\r\n      <input\r\n          type=\"checkbox\"\r\n          :id=\"taskId + '_' + subtask.id\"\r\n          :checked=\"isSubtaskChecked(subtask.id)\"\r\n          @change=\"updateSubtaskStatus(subtask.id, $event.target.checked)\"\r\n      >\r\n      <label :for=\"taskId + '_' + subtask.id\"></label>\r\n      <span>{{ subtask.text }}</span>\r\n      <button type=\"button\" @click=\"deleteSubtask(subtask.id)\">\r\n        <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\" stroke=\"#FFDFBE\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  </ul>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newSubtaskText: ''\r\n    }\r\n  },\r\n  props: {\r\n    subtasks: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    taskId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    deleteSubtask(subtaskId) {\r\n      this.$store.commit('DELETE_SUBTASK', {\r\n        taskId: this.taskId,\r\n        subtaskId\r\n      });\r\n    },\r\n    isSubtaskChecked(subtaskId) {\r\n      const subtask = this.subtasks.find(s => s.id === subtaskId);\r\n      return subtask?.completed || false;\r\n    },\r\n    updateSubtaskStatus(subtaskId) {\r\n      this.$store.commit('UPDATE_SUBTASK_CHECKED', {\r\n        taskId: this.taskId,\r\n        subtaskId\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";;EACMA,KAAK,EAAC;AAAgB;mBAD5B;mBAAA;mBAAA;;uBACEC,mBAAA,CAgBK,MAhBLC,UAgBK,I,kBAfHD,mBAAA,CAcKE,SAAA,QAhBTC,WAAA,CAEgDC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAxCN,mBAAA,CAcK;MAdDD,KAAK,EAAC,eAAe;MAA8BQ,GAAG,EAAED,OAAO,CAACE;QAClEC,mBAAA,CAKC;MAJGC,IAAI,EAAC,UAAU;MACdF,EAAE,EAAEJ,MAAA,CAAAO,MAAM,SAASL,OAAO,CAACE,EAAE;MAC7BI,OAAO,EAAEC,QAAA,CAAAC,gBAAgB,CAACR,OAAO,CAACE,EAAE;MACpCO,QAAM,EAAAC,MAAA,IAAEH,QAAA,CAAAI,mBAAmB,CAACX,OAAO,CAACE,EAAE,EAAEQ,MAAM,CAACE,MAAM,CAACN,OAAO;6CAPxEO,UAAA,GASMV,mBAAA,CAAgD;MAAxCW,GAAG,EAAEhB,MAAA,CAAAO,MAAM,SAASL,OAAO,CAACE;4BAT1Ca,UAAA,GAUMZ,mBAAA,CAA+B,cAAAa,gBAAA,CAAtBhB,OAAO,CAACiB,IAAI,kBACrBd,mBAAA,CAIS;MAJDC,IAAI,EAAC,QAAQ;MAAEc,OAAK,EAAAR,MAAA,IAAEH,QAAA,CAAAY,aAAa,CAACnB,OAAO,CAACE,EAAE;uCACpDC,mBAAA,CAEM;MAFDiB,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,IAAI;MAACC,OAAO,EAAC,WAAW;MAACC,IAAI,EAAC,MAAM;MAACC,KAAK,EAAC;QAChErB,mBAAA,CAA6R;MAAvRsB,CAAC,EAAC,+LAA+L;MAACC,MAAM,EAAC,SAAS;MAAC,cAAY,EAAC,KAAK;MAAC,gBAAc,EAAC,OAAO;MAAC,iBAAe,EAAC;+CAb7RC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}