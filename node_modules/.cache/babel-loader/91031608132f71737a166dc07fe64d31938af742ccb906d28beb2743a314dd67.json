{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task\"\n};\nconst _hoisted_2 = {\n  class: \"task__main\"\n};\nconst _hoisted_3 = [\"checked\"];\nconst _hoisted_4 = [\"for\"];\nconst _hoisted_5 = {\n  class: \"task__main--span\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SubtaskList = _resolveComponent(\"SubtaskList\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    checked: $props.task.completed,\n    onChange: _cache[0] || (_cache[0] = $event => _ctx.$emit('update', {\n      ...$props.task,\n      completed: $event.target.checked\n    }))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), _createElementVNode(\"label\", {\n    for: 'task-checkbox-' + $props.task.id,\n    class: \"task__main--checkbox--visible\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($props.task.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"task__main--delete\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('delete-task', $props.task.id))\n  }, [_createCommentVNode(\" SVG иконка \")])]), _createVNode(_component_SubtaskList, {\n    subtasks: $props.task.subtasks,\n    \"task-id\": $props.task.id,\n    onAddSubtask: _cache[2] || (_cache[2] = $event => _ctx.$emit('add-subtask', {\n      taskId: $props.task.id,\n      text: $event\n    })),\n    onDeleteSubtask: _cache[3] || (_cache[3] = $event => _ctx.$emit('delete-subtask', {\n      taskId: $props.task.id,\n      subtaskId: $event\n    }))\n  }, null, 8 /* PROPS */, [\"subtasks\", \"task-id\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","checked","$props","task","completed","onChange","_cache","$event","_ctx","$emit","target","_hoisted_3","for","id","_hoisted_4","_hoisted_5","_toDisplayString","text","onClick","_createCommentVNode","_createVNode","_component_SubtaskList","subtasks","onAddSubtask","taskId","onDeleteSubtask","subtaskId"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\components\\TaskItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"task\">\r\n    <div class=\"task__main\">\r\n      <input\r\n          type=\"checkbox\"\r\n          :checked=\"task.completed\"\r\n          @change=\"$emit('update', { ...task, completed: $event.target.checked })\"\r\n      >\r\n      <label :for=\"'task-checkbox-' + task.id\" class=\"task__main--checkbox--visible\"></label>\r\n      <span class=\"task__main--span\">{{ task.text }}</span>\r\n      <button class=\"task__main--delete\" @click=\"$emit('delete-task', task.id)\">\r\n        <!-- SVG иконка -->\r\n      </button>\r\n    </div>\r\n    <SubtaskList\r\n        :subtasks=\"task.subtasks\"\r\n        :task-id=\"task.id\"\r\n        @add-subtask=\"$emit('add-subtask', { taskId: task.id, text: $event })\"\r\n        @delete-subtask=\"$emit('delete-subtask', { taskId: task.id, subtaskId: $event })\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SubtaskList from './SubtaskList.vue'\r\n\r\nexport default {\r\n  name: 'TaskItem',\r\n  components: {  // Добавляем регистрацию компонента\r\n    SubtaskList\r\n  },\r\n  props: {\r\n    task: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  emits: ['update', 'delete-task', 'add-subtask', 'delete-subtask'],\r\n  methods: {\r\n    handleTaskChange(event) {\r\n      this.$emit('update', {\r\n        ...this.task,\r\n        completed: event.target.checked\r\n      })\r\n    },\r\n    emitDeleteTask() {\r\n      this.$emit('delete-task', this.task.id)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.task {\r\n  border: 2px solid #FFDFBE;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n}\r\n.task__main {\r\n  background-color: #FFDFBE;\r\n  padding: 13px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 23px;\r\n}\r\n.task__main--span {\r\n  margin-right: auto;\r\n  color: #7f4b13;\r\n}\r\n/* Остальные стили из оригинала */\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAY;mBAF3B;mBAAA;;EASYA,KAAK,EAAC;AAAkB;;;uBARlCC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,mBAAA,CAWM,OAXNC,UAWM,GAVJD,mBAAA,CAIC;IAHGE,IAAI,EAAC,UAAU;IACdC,OAAO,EAAEC,MAAA,CAAAC,IAAI,CAACC,SAAS;IACvBC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MAAA,GAAgBP,MAAA,CAAAC,IAAI;MAAAC,SAAA,EAAaG,MAAM,CAACG,MAAM,CAACT;IAAO;2CAN9EU,UAAA,GAQMb,mBAAA,CAAuF;IAA/Ec,GAAG,qBAAqBV,MAAA,CAAAC,IAAI,CAACU,EAAE;IAAElB,KAAK,EAAC;0BARrDmB,UAAA,GASMhB,mBAAA,CAAqD,QAArDiB,UAAqD,EAAAC,gBAAA,CAAnBd,MAAA,CAAAC,IAAI,CAACc,IAAI,kBAC3CnB,mBAAA,CAES;IAFDH,KAAK,EAAC,oBAAoB;IAAEuB,OAAK,EAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,gBAAgBP,MAAA,CAAAC,IAAI,CAACU,EAAE;MACrEM,mBAAA,gBAAmB,C,KAGvBC,YAAA,CAKEC,sBAAA;IAJGC,QAAQ,EAAEpB,MAAA,CAAAC,IAAI,CAACmB,QAAQ;IACvB,SAAO,EAAEpB,MAAA,CAAAC,IAAI,CAACU,EAAE;IAChBU,YAAW,EAAAjB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MAAAe,MAAA,EAA0BtB,MAAA,CAAAC,IAAI,CAACU,EAAE;MAAAI,IAAA,EAAQV;IAAM;IACjEkB,eAAc,EAAAnB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;MAAAe,MAAA,EAA6BtB,MAAA,CAAAC,IAAI,CAACU,EAAE;MAAAa,SAAA,EAAanB;IAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}