{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport SubTasks from \"./SubTasks\";\nexport default {\n  components: {\n    'sub-tasks': SubTasks\n  },\n  methods: {\n    addSubtask() {\n      this.$store.commit('ADD_SUBTASK', {\n        taskId: this.taskId,\n        text: this.newSubtaskText\n      });\n      this.newSubtaskText = '';\n    },\n    deleteTask(id) {\n      this.$store.commit(\"DELETE_TASK\", id);\n    }\n  },\n  computed: {\n    taskChecked: {\n      get() {\n        const task = this.$store.state.tasks.find(t => t.id === this.taskId);\n        return task?.checked || false;\n      },\n      set() {\n        this.$store.commit('UPDATE_TASK_CHECKED', this.taskId);\n      }\n    }\n  }\n};","map":{"version":3,"names":["SubTasks","components","methods","addSubtask","$store","commit","taskId","text","newSubtaskText","deleteTask","id","computed","taskChecked","get","task","state","tasks","find","t","checked","set"],"sources":["C:\\Users\\Pavel\\Documents\\webstorm\\todo\\src\\components\\TaskList.vue"],"sourcesContent":["<template>\r\n  <div class=\"task\" v-for=\"task in $store.state.tasks\" :key=\"task.id\">\r\n    <div class=\"task__main\">\r\n      <input type=\"checkbox\" class=\"task__main--checkbox--hide\" :id=\"task.id\" :checked=\"taskChecked\" @click=\"$store.commit('CHECK_TASK', task.id)\">\r\n      <label :for=\"task.id\" class=\"task__main--checkbox--visible\">\r\n\r\n      </label>\r\n      <span class=\"task__main--span\">{{ task.text }}</span>\r\n      <button type=\"button\" class=\"task__main--delete\" @click=\"deleteTask(task.id)\">\r\n        <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n              d=\"M9 9L17 17M17 9L9 17M3.66667 1H22.3333C23.8061 1 25 2.19391 25 3.66667V22.3333C25 23.8061 23.8061 25 22.3333 25H3.66667C2.19391 25 1 23.8061 1 22.3333V3.66667C1 2.19391 2.19391 1 3.66667 1Z\"\r\n              stroke=\"#FFCA93\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <sub-tasks :subtasks=\"task.subtasks\" :taskId=\"task.id\"></sub-tasks>\r\n\r\n    <form class=\"add-subtask\" @submit.prevent=\"addSubtask\">\r\n      <button type=\"submit\">+</button>\r\n      <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new subtask\"\r\n          v-model=\"newSubtaskText\"\r\n      >\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SubTasks from \"./SubTasks\";\r\n\r\nexport default {\r\n  components: {\r\n    'sub-tasks': SubTasks\r\n  },\r\n  methods: {\r\n    addSubtask() {\r\n      this.$store.commit('ADD_SUBTASK', {\r\n        taskId: this.taskId,\r\n        text: this.newSubtaskText\r\n      });\r\n      this.newSubtaskText = '';\r\n    },\r\n    deleteTask(id) {\r\n      this.$store.commit(\"DELETE_TASK\", id)\r\n    }\r\n  },\r\n  computed: {\r\n    taskChecked: {\r\n      get() {\r\n        const task = this.$store.state.tasks.find(t => t.id === this.taskId);\r\n        return task?.checked || false;\r\n      },\r\n      set() {\r\n        this.$store.commit('UPDATE_TASK_CHECKED', this.taskId);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;AA+BA,OAAOA,QAAO,MAAO,YAAY;AAEjC,eAAe;EACbC,UAAU,EAAE;IACV,WAAW,EAAED;EACf,CAAC;EACDE,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,aAAa,EAAE;QAChCC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,IAAI,EAAE,IAAI,CAACC;MACb,CAAC,CAAC;MACF,IAAI,CAACA,cAAa,GAAI,EAAE;IAC1B,CAAC;IACDC,UAAUA,CAACC,EAAE,EAAE;MACb,IAAI,CAACN,MAAM,CAACC,MAAM,CAAC,aAAa,EAAEK,EAAE;IACtC;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAE;MACXC,GAAGA,CAAA,EAAG;QACJ,MAAMC,IAAG,GAAI,IAAI,CAACV,MAAM,CAACW,KAAK,CAACC,KAAK,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACR,EAAC,KAAM,IAAI,CAACJ,MAAM,CAAC;QACpE,OAAOQ,IAAI,EAAEK,OAAM,IAAK,KAAK;MAC/B,CAAC;MACDC,GAAGA,CAAA,EAAG;QACJ,IAAI,CAAChB,MAAM,CAACC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAACC,MAAM,CAAC;MACxD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}